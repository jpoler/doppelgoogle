need splitport function

if a web address doesnt start with http://, add it

scheme

at first, we will naively ignore subdomains

## How to safely kill all processes

## Make no assumptions about where the KeyboardInterrupt will be caught
## this is wrong, master should be the one to recieve signal i think but make sure

## if caught in master, send message to all children telling them to quit, and then
## block for each process until it dies

## if caught in child, send message to master through pipe notifying that a keyboard interrupt has been
## recieved, and clean up what was being done

## master must poll for messages at start of while True, and so must child


## RAGING CLUES:

## in emacs shell, the C-c interrupt isn't being caught consistantly
## in terminal window, C-c is caught first time
## after exit, bash never comes back, but is still running
## C-c becomes nonresponsive in both emacs and bash now

# (env)jdp@ThinkPad-T440s:~/dopplegoogle$ ps -A | grep pts/6
#  3369 pts/6    00:00:00 bash
#  3433 pts/6    00:00:01 python

# plain terminal
     # │         │         │      ├─gnome-terminal─┬─bash───python─┬─4*[python───2*[{python}]]
     # │         │         │      │                │               └─{python}
     # │         │         │      │                ├─bash───pstree
     # │         │         │      │                ├─gnome-pty-helpe
     # │         │         │      │                └─3*[{gnome-terminal}]


# within emacs
     # │         │         │      ├─emacs24─┬─bash───python─┬─4*[python───2*[{python}]]
     # │         │         │      │         │               └─{python}
     # │         │         │      │         └─2*[{emacs24}]

# http://stackoverflow.com/questions/21665341/python-multiprocessing-and-independence-of-children-processes
# this answer doesn't seem right? ive definitely experienced the parent quitting but children
# persist?

# signals?
# https://docs.python.org/2/library/signal.html

# atexit


The problem is almost certainly a deadly-embrace!!

CHILD-1
obtain lock by calling put(data) on data_queue

MASTER
block waiting for get() on data_queue

CHILD-2
CHILD-3
CHILD-4

dont forget strace

2 questions to answer

-- when a parent process is stopped, are its children also stopped?
   even more specifically, if a child is blocking, and a parent recieves a SIGTERM,
   will the child be awoken before the signal is handled by the parent?

   it is clear that _exit_function() is called in bootstrap() which blocks on child.join()

that leads to question 2
-- what are the children blocking on? at this point im almost certain that they are blocking within
   the networking code, not on a shared queue

   to answer this question, find a way to trace the line of execution within the child processes,
   or at least figure out how to get a stack trace at the the time of interrupt


things to consider:

should probably parse response headers and take the response value into consideration
aka only add pages to the queue that are good responses try to figure out how to use the
headers from urlopen